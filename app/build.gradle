apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-allopen'

apply plugin: 'kotlin-android-extensions'

android {

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.example.myapplication"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    kapt {
        generateStubs = true
    }

    dataBinding {
        enabled = true
    }

    testOptions {
        animationsDisabled true

        unitTests {
            includeAndroidResources = true
        }
    }
}

ext {
    // App dependency versions
    appCompatVersion = '1.1.0'
    supportVersion = '1.0.0'
    playServicesVersion = '17.1.0'
    daggerVersion = '2.20'
    retrofitVersion = '2.4.0'
    okHttpVersion = '3.11.0'
    leakcanaryVersion = '1.5.4'
    lifecycleVersion = '2.0.0'

    // Test dependency versions
    mockitoVersion = '2.25.0'
    robolectricVersion = '4.2'
    androidTestSupportVersion = '1.1.0'
    espressoVersion = '3.1.0-alpha4'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    kapt "androidx.databinding:databinding-compiler:$rootProject.ext.android_plugin_version"
    // Need this because of Kotlin

    // Android/Google libraries
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.recyclerview:recyclerview:$supportVersion"
    implementation "androidx.cardview:cardview:$supportVersion"
    implementation "androidx.annotation:annotation:$supportVersion"
    implementation "com.google.android.material:material:$supportVersion"

    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.1.0'
    implementation "androidx.annotation:annotation:$supportVersion"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation "com.google.android.gms:play-services-base:$playServicesVersion"

    // Room
    implementation "androidx.room:room-runtime:$rootProject.ext.versions.room"
    kapt "androidx.room:room-compiler:$rootProject.ext.versions.room"
    implementation "androidx.room:room-rxjava2:$rootProject.ext.versions.room"

    // App architecture - Dagger 2
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    // App architecture - RxJava
    implementation 'io.reactivex.rxjava2:rxjava:2.2.7'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    // JSON
    implementation 'com.squareup.moshi:moshi:1.6.0'
    kapt 'com.squareup.moshi:moshi-kotlin-codegen:1.6.0'

    // Time Monitoring
    implementation 'joda-time:joda-time:2.9.9'

    // Networking - REST
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.4.0"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"

    // Monitoring - Timber (logging)
    implementation 'com.jakewharton.timber:timber:4.7.0'

    // Unit test
    testImplementation 'junit:junit:4.12'
    testImplementation "androidx.test:rules:$androidTestSupportVersion"
    testImplementation "androidx.test:core:$androidTestSupportVersion"
    testImplementation "androidx.test.ext:junit:$androidTestSupportVersion"
    testImplementation 'org.robolectric:robolectric:4.2'
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "com.nhaarman:mockito-kotlin-kt1.1:1.5.0"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okHttpVersion"


    // Android JUnit Runner, JUnit Rules, and Espresso
    androidTestImplementation "androidx.test:runner:$androidTestSupportVersion"
    androidTestImplementation "androidx.test:rules:$androidTestSupportVersion"
    androidTestImplementation "androidx.test:core:$androidTestSupportVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidTestSupportVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"

    androidTestImplementation "org.mockito:mockito-android:$mockitoVersion"
    androidTestImplementation "com.nhaarman:mockito-kotlin-kt1.1:1.5.0"
}

allOpen {
    annotation('dagger.Module')
    annotation("com.atomicrobot.marsrover.Mockable")
}
